name: Build and Deploy

on: [push]
permissions:
      id-token: write
      contents: read
env:
  AZURE_AKS_CLUSTER: myaksclustername
  AKS_RESOURCE_GROUP: myaksresourcegroup
  ACR_RESOURCE_URI: myregistry1904.azurecr.io

jobs:
  build:
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: tye deploy
    runs-on: ubuntu-latest
    steps:
    - name: ‚úî Checkout 
      uses: actions/checkout@v2

    - name: üß∞ Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 3.1.x

    - name: üõ† Install Tye tools
      run: |
        dotnet tool install -g Microsoft.Tye --version "0.4.0-alpha.20371.1"
        
    - name: üîê Login to ACR
      uses: Azure/docker-login@v1  
      with:  
        login-server: ${{ env.ACR_RESOURCE_URI }}
        username: ${{ secrets.ACR_USER }}  
        password: ${{ secrets.ACR_PASSWORD }}

    # - name: üìÉ Set AKS context
    - uses: azure/login@v1
      with:
       client-id: ${{ secrets.AZURE_CLIENT_ID }}
       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # - uses: azure/aks-set-context@v3
    #   with:
    #    resource-group: '<resource group name>'
    #    cluster-name: '<cluster name>'
    # - uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}
      
    # - uses: azure/aks-set-context@v3
    #   with:
    #     resource-group: ${{ env.AKS_RESOURCE_GROUP }}
    #     cluster-name: ${{ env.AZURE_AKS_CLUSTER }}
    #     #creds: ${{ secrets.AZURE_CREDENTIALS }}
        
        

    # - name: üåê Install ingress-nginx
    #   run: |
    #     kubectl apply -f https://aka.ms/tye/ingress/deploy

    # - name: ‚ò∏ tye deploy
    #   run: |
    #     tye deploy -v Debug
